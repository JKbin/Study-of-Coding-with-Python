# DFS (Death-First Search)
# 깊이 우선 탐색, 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘

# DFS는 스택 자료구조(또는 재귀함수)를 이용한다.
# 1. 탐색 시작 노드를 스택에 삽입하고 방문 처리를 한다.
# 2. 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면
# 그 노드를 스택에 넣고 방문 처리한다. 방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼낸다.
# 더 이상 2번의 과정을 수핼할 수 없을 때까지 반복한다.

# DFS 예제
graph = [
    [], # 1번부터 시작
    [2, 3, 8],  # 1번과 연결된 노드 
    [1, 7],     # 2번과 연결된 노드
    [1, 4, 5],  # 3번과 연결된 노드
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]

# 각 노드가 방문된 정보를 표현 (1차원 리스트)
visited = [False] * 9 # 처음에는 false로 초기화, 0은 사용하지 않기 때문에 *9를 해준다.


# dfs 함수 정의
def dfs(graph, v, visited):
    # 현재 노드를 방문 처리
    visited[v] = True
    print(v, end=' ')
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)


dfs(graph, 1, visited)


